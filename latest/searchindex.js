Search.setIndex({"docnames": ["examples/index", "examples/linear-model", "examples/sg_execution_times", "how-to/index", "index", "reference/index", "reference/models", "reference/neural_network", "reference/preprocessing", "reference/selection/feature-selection", "reference/selection/greedyselector", "reference/selection/index", "reference/selection/sample-selection", "reference/utils/convert", "reference/utils/index", "reference/utils/metrics", "reference/utils/split_data"], "filenames": ["examples/index.rst", "examples/linear-model.rst", "examples/sg_execution_times.rst", "how-to/index.rst", "index.rst", "reference/index.rst", "reference/models.rst", "reference/neural_network.rst", "reference/preprocessing.rst", "reference/selection/feature-selection.rst", "reference/selection/greedyselector.rst", "reference/selection/index.rst", "reference/selection/sample-selection.rst", "reference/utils/convert.rst", "reference/utils/index.rst", "reference/utils/metrics.rst", "reference/utils/split_data.rst"], "titles": ["Equisolve Examples", "Computing a Linear Model", "Computation times", "How-to guides", "Overview of Equisolve\u2019s Documentation", "API reference", "Regression models", "Neural Network", "Preprocessing data", "Feature selection", "<code class=\"docutils literal notranslate\"><span class=\"pre\">GreedySelector</span></code>", "Feature and Sample Selection", "Sample selection", "Convert", "Utility functions", "Metrics and scoring", "Splitting Equistore TensorMaps"], "terms": {"thi": [0, 1, 3, 9, 12, 13, 16], "folder": 0, "consist": 0, "introductori": 0, "comput": [0, 3], "linear": [0, 2, 3, 5, 7], "model": [0, 2, 3, 5, 14, 15], "download": [0, 1], "all": [0, 1, 9, 12, 13, 16], "python": [0, 1], "sourc": [0, 1, 7, 9, 10, 12, 13, 15, 16], "code": [0, 1], "examples_python": 0, "zip": 0, "jupyt": [0, 1], "notebook": [0, 1], "examples_jupyt": 0, "galleri": [0, 1], "gener": [0, 1, 16], "sphinx": [0, 1], "go": 1, "end": [1, 16], "full": [1, 9, 12], "exampl": [1, 2, 5, 13, 15], "In": [1, 9, 12, 16], "tutori": 1, "we": [1, 16], "calcul": 1, "us": [1, 4, 6, 7, 9, 12, 16], "ridg": [1, 5, 6], "regress": [1, 5, 15], "If": [1, 4, 5, 7, 9, 12, 16], "you": [1, 4, 5], "ar": [1, 4, 5, 6, 7, 9, 12, 15, 16], "never": 1, "work": 1, "metatensor": [1, 6, 13, 16], "object": [1, 13, 16], "befor": [1, 16], "pleas": 1, "take": [1, 3, 4, 5, 7], "look": [1, 3, 4, 5], "document": [1, 9, 12], "For": [1, 3, 10, 16], "need": 1, "atom": [1, 13], "descriptor": 1, "x": [1, 10], "well": 1, "energi": [1, 13], "forc": [1, 13], "target": [1, 15], "y": 1, "first": [1, 16], "import": [1, 16], "necessari": 1, "packag": 1, "ase": [1, 13], "io": 1, "numpi": [1, 6, 8, 9, 10, 11, 12, 16], "np": 1, "from": [1, 6, 13, 16], "rascalin": 1, "soappowerspectrum": 1, "equisolv": [1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16], "linear_model": 1, "util": [1, 5, 13, 15, 16], "convert": [1, 5, 14], "ase_to_tensormap": [1, 13, 14], "As": [1, 16], "set": [1, 16], "shiftml": 1, "can": [1, 7, 9, 12, 16], "obtain": 1, "our": 1, "websit": 1, "read": 1, "20": [1, 16], "structur": [1, 13, 16], "ASE": 1, "frame": [1, 13], "xyz": 1, "The": [1, 5, 7, 10, 11, 16], "contain": [1, 5, 10, 13, 16], "everyth": 1, "posit": [1, 15, 16], "also": 1, "store": [1, 13], "which": [1, 9, 12, 16], "against": 1, "soap": 1, "powerspectrum": 1, "defin": 1, "hyper": 1, "paramet": [1, 7, 10, 13, 15, 16], "hyper_paramet": 1, "cutoff": 1, "5": [1, 16], "0": [1, 2, 9, 12, 15, 16], "max_radi": 1, "6": [1, 16], "max_angular": 1, "4": [1, 16], "atomic_gaussian_width": 1, "3": [1, 13, 16], "center_atom_weight": 1, "1": [1, 9, 12, 16], "radial_basi": 1, "gto": 1, "cutoff_funct": 1, "shiftedcosin": 1, "width": 1, "And": 1, "run": [1, 10, 16], "actual": 1, "includ": [1, 16], "gradient": [1, 10], "respect": [1, 16], "more": [1, 8], "detail": [1, 3, 4], "how": [1, 4, 5, 16], "see": [1, 7], "now": 1, "move": 1, "kei": [1, 7, 9, 12, 13, 16], "properti": [1, 7, 9, 10, 12, 13, 16], "access": [1, 9, 12], "them": 1, "keys_to_sampl": 1, "species_cent": 1, "keys_to_properti": 1, "species_neighbor_1": 1, "species_neighbor_2": 1, "represenant": 1, "each": [1, 7, 9, 10, 12, 13, 15, 16], "central": 1, "per": [1, 13], "howev": [1, 16], "i": [1, 7, 9, 10, 11, 12, 13, 15, 16], "onli": [1, 16], "therefor": 1, "sum": [1, 16], "center": 1, "sum_over_sampl": 1, "newli": 1, "tensormap": [1, 5, 6, 7, 10, 13, 14, 15], "singl": 1, "block": [1, 7, 9, 10, 12, 15], "print": 1, "f": 1, "len": 1, "1800": 1, "sampl": [1, 5, 9, 10, 16], "acc": 1, "meth": 1, "method": [1, 9, 12], "class": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16], "tensorblock": [1, 10], "compon": 1, "initil": 1, "autom": 1, "learn": [1, 10, 16], "present": [1, 16], "clf": 1, "fit": [1, 9, 10, 12], "have": [1, 9, 10, 12, 13, 16], "reguler": 1, "valu": [1, 9, 10, 12, 13, 15, 16], "creat": [1, 7, 10, 13], "desir": 1, "here": [1, 6], "chose": 1, "strength": 1, "cdot": 1, "10": [1, 16], "note": 1, "without": [1, 16], "standard": 1, "featur": [1, 5, 8, 10], "depend": [1, 10], "system": 1, "ha": [1, 16], "taken": 1, "carefulli": 1, "usual": 1, "optim": 1, "alpha": 1, "ones_lik": 1, "multipli": 1, "1e": [1, 9, 12], "so": [1, 16], "far": 1, "same": [1, 7, 10, 13, 16], "number": [1, 7, 9, 12, 16], "must": [1, 9, 12, 16], "becaus": [1, 7], "wai": 1, "remov": 1, "except": 1, "0th": 1, "one": [1, 7, 15], "slice": 1, "label": [1, 7, 16], "name": [1, 16], "arrai": [1, 13], "axi": [1, 10, 16], "_": 1, "handl": 1, "differ": [1, 9, 12], "regular": 1, "appli": [1, 7], "wise": 1, "an": [1, 6, 7, 9, 12, 13, 16], "1d": 1, "length": [1, 13, 16], "7200": 1, "next": 1, "weight": 1, "equistior": 1, "five": 1, "time": 1, "sw": 1, "function": [1, 3, 4, 5, 7, 13, 15], "dictionary_to_tensormap": 1, "shape": [1, 7], "sw_dict": 1, "final": 1, "abov": 1, "sample_weight": 1, "torchridg": [1, 6], "predict": [1, 15], "root": 1, "mean": [1, 15], "squre": 1, "error": [1, 15], "score": [1, 5, 14], "rmse": [1, 14, 15], "parameter_kei": [1, 15], "3f": 1, "ev": 1, "\u00e5": 1, "105": 1, "209": 1, "want": [1, 16], "py": [1, 2, 16], "ipynb": 1, "00": 2, "03": 2, "455": 2, "total": [2, 16], "execut": [2, 16], "file": 2, "mb": 2, "section": [3, 4, 5], "list": [3, 4, 6, 13, 15, 16], "recip": [3, 4, 5], "variou": 3, "build": [3, 6, 14], "api": [3, 4], "specif": [3, 4], "refer": [3, 4, 9, 12], "welcom": 4, "sidebar": 4, "menu": 4, "navig": 4, "through": [4, 9, 12], "insid": [4, 5], "guid": [4, 5], "main": 5, "public": 5, "equsiolv": 5, "most": 5, "littl": 5, "stack": 5, "toegther": 5, "might": 5, "preprocess": 5, "data": [5, 10, 16], "standardscal": [5, 8], "select": [5, 10], "greedyselector": [5, 9, 11, 12], "metric": [5, 14], "split": [5, 14], "equistor": [5, 14], "neural": 5, "network": 5, "moduletensormap": [5, 7], "base": [6, 9, 10, 12], "torch": [6, 7], "ad": 6, "futur": 6, "alia": [6, 8], "nn": 7, "in_tensor": 7, "out_tensor": 7, "bia": 7, "bool": [7, 10, 13], "true": [7, 13, 16], "A": [7, 15, 16], "tensor": [7, 10, 16], "map": 7, "accept": 7, "forward": 7, "It": 7, "determin": [7, 13], "input": [7, 10, 16], "devic": 7, "dtype": [7, 16], "modul": [7, 16], "output": [7, 16], "chang": [7, 8], "cannot": 7, "persev": 7, "classmethod": 7, "from_modul": 7, "in_kei": 7, "in_featur": 7, "int": [7, 9, 10, 12, 16], "out_featur": 7, "none": [7, 9, 10, 12, 13, 16], "many_to_on": 7, "assum": [7, 10], "specifi": [7, 9, 12, 16], "separ": 7, "deepcopi": 7, "arbitrari": 7, "By": 7, "default": [7, 16], "relabel": 7, "rang": 7, "module_map": 7, "moduledict": 7, "wrapper": [7, 9, 11, 12], "around": 7, "correspond": [7, 9, 12, 13, 16], "dict": [7, 9, 10, 12], "dictionari": 7, "type": [7, 10], "deep": 7, "copi": 7, "hash": 7, "module_kei": 7, "raw": 8, "vector": [8, 10], "suitabl": 8, "represent": 8, "torchstandardscal": 8, "selector": [9, 10, 11, 12], "scikit": [9, 11, 12], "matter": [9, 11, 12], "feature_select": 9, "cur": [9, 12], "recompute_everi": [9, 12], "k": [9, 12], "toler": [9, 12], "12": [9, 12], "n_to_select": [9, 10, 12], "score_threshold": [9, 12], "score_threshold_typ": [9, 12], "absolut": [9, 12, 16], "progress_bar": [9, 12], "fals": [9, 10, 12], "random_st": [9, 12], "transform": [9, 10, 12], "perform": [9, 10, 12, 15], "greedi": [9, 12], "mani": [9, 12, 16], "case": [9, 12, 16], "than": [9, 12], "fewest": [9, 12], "ani": [9, 12], "tupl": [9, 12, 15, 16], "everi": [9, 12], "skmatter": [9, 10, 12], "fp": [9, 12], "initi": [9, 12], "farthest": [9, 12], "point": [9, 12, 15], "instanc": [9, 12, 13, 16], "plot": [9, 12], "hausdorff": [9, 10, 12], "distanc": [9, 10, 12], "haussdorf_at_select": [9, 12], "after": [9, 10, 12], "call": [9, 10, 12], "_select": [10, 11], "selector_class": 10, "selection_typ": 10, "str": [10, 13, 15, 16], "selector_argu": 10, "wrap": [10, 11], "done": [10, 11], "consid": 10, "warm_start": 10, "train": [10, 16], "whether": 10, "should": 10, "continu": 10, "alreadi": 10, "increas": 10, "fit_transform": 10, "get_select_dist": 10, "metadata": [10, 16], "relev": 10, "e": [10, 16], "being": 10, "sort": 10, "accord": [10, 16], "descend": 10, "order": [10, 16], "choos": 10, "subset": 10, "column": [10, 13], "row": 10, "argument": [10, 16], "pass": [10, 16], "support": 10, "reduc": 10, "return": [10, 13, 15, 16], "core": 11, "sample_select": 12, "stress": 13, "inform": 13, "extract": 13, "given": [13, 16], "properties_to_tensormap": [13, 14], "float": [13, 15, 16], "positions_gradi": 13, "ndarrai": 13, "cell_gradi": 13, "is_structure_properti": 13, "like": 13, "dimens": 13, "n": [13, 16], "entri": 13, "m_i": 13, "neg": [13, 15], "virial": 13, "boolean": 13, "implement": 13, "yet": 13, "rais": 13, "valueerror": 13, "element": [13, 16], "doe": [13, 16], "3x3": 13, "matrix": 13, "helper": 14, "split_data": [14, 16], "evalu": 15, "qualiti": 15, "": 15, "y_true": 15, "y_pred": 15, "squar": 15, "loss": 15, "ground": 15, "truth": 15, "correct": 15, "estim": 15, "cell": 15, "non": 15, "best": 15, "multipl": 16, "along": 16, "n_group": 16, "group_siz": 16, "seed": 16, "either": 16, "uniqu": 16, "indic": 16, "found": 16, "shuffl": 16, "Then": 16, "thei": 16, "divid": 16, "where": 16, "size": 16, "group": 16, "These": 16, "nest": 16, "share": 16, "common": 16, "other": 16, "ax": 16, "equival": 16, "supervis": 16, "machin": 16, "new": 16, "equal": 16, "evenli": 16, "nearest": 16, "integ": 16, "interpret": 16, "wherea": 16, "rel": 16, "former": 16, "chosen": 16, "latter": 16, "random": 16, "control": 16, "dictat": 16, "up": 16, "occur": 16, "split_tensor": 16, "th": 16, "ith": 16, "grouped_label": 16, "2": 16, "index": 16, "strutcur": 16, "exactli": 16, "divis": 16, "made": 16, "lexigraph": 16, "9": 16, "inclus": 16, "inc": 16, "second": 16, "new_tensor_1": 16, "new_tensor_2": 16, "test": 16, "80": 16, "ratio": 16, "both": 16, "in_train": 16, "out_train": 16, "7": 16, "in_test": 16, "out_test": 16, "8": 16, "100": 16, "valid": 16, "val": 16, "find": 16, "unique_structure_indic": 16, "unique_metadata": 16, "i4": 16, "verifi": 16, "assert": 16, "abolut": 16, "in_val": 16, "out_val": 16, "inspect": 16}, "objects": {"equisolve": [[7, 0, 0, "-", "nn"]], "equisolve.nn": [[7, 1, 1, "", "Linear"], [7, 1, 1, "", "ModuleTensorMap"]], "equisolve.nn.Linear": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "from_module"]], "equisolve.nn.ModuleTensorMap": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "from_module"], [7, 3, 1, "", "module_map"], [7, 3, 1, "", "out_tensor"]], "equisolve.numpy._selection": [[10, 1, 1, "", "GreedySelector"]], "equisolve.numpy._selection.GreedySelector": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "fit_transform"], [10, 3, 1, "", "get_select_distance"], [10, 3, 1, "", "selection_type"], [10, 3, 1, "", "selector_arguments"], [10, 3, 1, "", "selector_class"], [10, 3, 1, "", "support"], [10, 2, 1, "", "transform"]], "equisolve.numpy": [[9, 0, 0, "-", "feature_selection"], [6, 0, 0, "-", "models"], [8, 0, 0, "-", "preprocessing"], [12, 0, 0, "-", "sample_selection"]], "equisolve.numpy.feature_selection": [[9, 1, 1, "", "CUR"], [9, 1, 1, "", "FPS"]], "equisolve.numpy.models": [[6, 4, 1, "", "Ridge"]], "equisolve.numpy.preprocessing": [[8, 4, 1, "", "StandardScaler"]], "equisolve.numpy.sample_selection": [[12, 1, 1, "", "CUR"], [12, 1, 1, "", "FPS"]], "equisolve.utils": [[13, 0, 0, "-", "convert"], [15, 0, 0, "-", "metrics"], [16, 0, 0, "-", "split_data"]], "equisolve.utils.convert": [[13, 5, 1, "", "ase_to_tensormap"], [13, 5, 1, "", "properties_to_tensormap"]], "equisolve.utils.metrics": [[15, 5, 1, "", "rmse"]], "equisolve.utils.split_data": [[16, 5, 1, "", "split_data"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"equisolv": [0, 4], "exampl": [0, 16], "comput": [1, 2], "linear": 1, "model": [1, 6], "dataset": 1, "train": 1, "data": [1, 8], "construct": 1, "time": 2, "how": 3, "guid": 3, "overview": 4, "": 4, "document": 4, "api": 5, "refer": 5, "regress": 6, "neural": 7, "network": 7, "preprocess": 8, "featur": [9, 11], "select": [9, 11, 12], "greedyselector": 10, "sampl": [11, 12], "convert": 13, "util": 14, "function": 14, "metric": 15, "score": 15, "split": 16, "equistor": 16, "tensormap": 16}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Equisolve Examples": [[0, "equisolve-examples"]], "Computing a Linear Model": [[1, "computing-a-linear-model"]], "Dataset": [[1, "dataset"]], "Training data": [[1, "training-data"]], "Construct the model": [[1, "construct-the-model"]], "Computation times": [[2, "computation-times"]], "How-to guides": [[3, "how-to-guides"]], "Overview of Equisolve\u2019s Documentation": [[4, "overview-of-equisolve-s-documentation"]], "API reference": [[5, "api-reference"]], "Regression models": [[6, "module-equisolve.numpy.models"]], "Neural Network": [[7, "module-equisolve.nn"]], "Preprocessing data": [[8, "module-equisolve.numpy.preprocessing"]], "Feature selection": [[9, "module-equisolve.numpy.feature_selection"]], "GreedySelector": [[10, "greedyselector"]], "Feature and Sample Selection": [[11, "feature-and-sample-selection"]], "Sample selection": [[12, "module-equisolve.numpy.sample_selection"]], "Convert": [[13, "module-equisolve.utils.convert"]], "Utility functions": [[14, "utility-functions"]], "Metrics and scoring": [[15, "module-equisolve.utils.metrics"]], "Splitting Equistore TensorMaps": [[16, "module-equisolve.utils.split_data"]], "Examples": [[16, "examples"]]}, "indexentries": {"ridge (in module equisolve.numpy.models)": [[6, "equisolve.numpy.models.Ridge"]], "equisolve.numpy.models": [[6, "module-equisolve.numpy.models"]], "module": [[6, "module-equisolve.numpy.models"], [7, "module-equisolve.nn"], [8, "module-equisolve.numpy.preprocessing"], [9, "module-equisolve.numpy.feature_selection"], [12, "module-equisolve.numpy.sample_selection"], [13, "module-equisolve.utils.convert"], [15, "module-equisolve.utils.metrics"], [16, "module-equisolve.utils.split_data"]], "linear (class in equisolve.nn)": [[7, "equisolve.nn.Linear"]], "moduletensormap (class in equisolve.nn)": [[7, "equisolve.nn.ModuleTensorMap"]], "equisolve.nn": [[7, "module-equisolve.nn"]], "forward() (equisolve.nn.linear method)": [[7, "equisolve.nn.Linear.forward"]], "forward() (equisolve.nn.moduletensormap method)": [[7, "equisolve.nn.ModuleTensorMap.forward"]], "from_module() (equisolve.nn.linear class method)": [[7, "equisolve.nn.Linear.from_module"]], "from_module() (equisolve.nn.moduletensormap class method)": [[7, "equisolve.nn.ModuleTensorMap.from_module"]], "module_map (equisolve.nn.moduletensormap property)": [[7, "equisolve.nn.ModuleTensorMap.module_map"]], "out_tensor (equisolve.nn.moduletensormap property)": [[7, "equisolve.nn.ModuleTensorMap.out_tensor"]], "standardscaler (in module equisolve.numpy.preprocessing)": [[8, "equisolve.numpy.preprocessing.StandardScaler"]], "equisolve.numpy.preprocessing": [[8, "module-equisolve.numpy.preprocessing"]], "cur (class in equisolve.numpy.feature_selection)": [[9, "equisolve.numpy.feature_selection.CUR"]], "fps (class in equisolve.numpy.feature_selection)": [[9, "equisolve.numpy.feature_selection.FPS"]], "equisolve.numpy.feature_selection": [[9, "module-equisolve.numpy.feature_selection"]], "greedyselector (class in equisolve.numpy._selection)": [[10, "equisolve.numpy._selection.GreedySelector"]], "fit() (equisolve.numpy._selection.greedyselector method)": [[10, "equisolve.numpy._selection.GreedySelector.fit"]], "fit_transform() (equisolve.numpy._selection.greedyselector method)": [[10, "equisolve.numpy._selection.GreedySelector.fit_transform"]], "get_select_distance (equisolve.numpy._selection.greedyselector property)": [[10, "equisolve.numpy._selection.GreedySelector.get_select_distance"]], "selection_type (equisolve.numpy._selection.greedyselector property)": [[10, "equisolve.numpy._selection.GreedySelector.selection_type"]], "selector_arguments (equisolve.numpy._selection.greedyselector property)": [[10, "equisolve.numpy._selection.GreedySelector.selector_arguments"]], "selector_class (equisolve.numpy._selection.greedyselector property)": [[10, "equisolve.numpy._selection.GreedySelector.selector_class"]], "support (equisolve.numpy._selection.greedyselector property)": [[10, "equisolve.numpy._selection.GreedySelector.support"]], "transform() (equisolve.numpy._selection.greedyselector method)": [[10, "equisolve.numpy._selection.GreedySelector.transform"]], "cur (class in equisolve.numpy.sample_selection)": [[12, "equisolve.numpy.sample_selection.CUR"]], "fps (class in equisolve.numpy.sample_selection)": [[12, "equisolve.numpy.sample_selection.FPS"]], "equisolve.numpy.sample_selection": [[12, "module-equisolve.numpy.sample_selection"]], "ase_to_tensormap() (in module equisolve.utils.convert)": [[13, "equisolve.utils.convert.ase_to_tensormap"]], "equisolve.utils.convert": [[13, "module-equisolve.utils.convert"]], "properties_to_tensormap() (in module equisolve.utils.convert)": [[13, "equisolve.utils.convert.properties_to_tensormap"]], "equisolve.utils.metrics": [[15, "module-equisolve.utils.metrics"]], "rmse() (in module equisolve.utils.metrics)": [[15, "equisolve.utils.metrics.rmse"]], "equisolve.utils.split_data": [[16, "module-equisolve.utils.split_data"]], "split_data() (in module equisolve.utils.split_data)": [[16, "equisolve.utils.split_data.split_data"]]}})