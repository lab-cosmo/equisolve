[tox]
minversion = 3.14.0
ignore_basepython_conflict = true
# these are the environments that will run when you
# execute `tox` in the command-line
# bellow you will find explanations for all environments
envlist =
    lint
    build
    tests
    docs
    format

lint_folders = {toxinidir}/examples {toxinidir}/src {toxinidir}/tests {toxinidir}/setup.py

[testenv:lint]
# lint the Python code with flake8 (code linter), black (code formatter), and
# isort (sorting of imports)
skip_install = true
deps =
    flake8
    flake8-bugbear
    black
    isort
commands =
    flake8 {[tox]lint_folders}
    black --check --diff {[tox]lint_folders}
    isort --check-only --diff {[tox]lint_folders}

[testenv]
# configures which environments run with each python version
basepython = {tests,build,docs,lint,radon,safety}: {env:TOXPYTHON:python3}
passenv = *

[testenv:build]
# Make sure we can build sdist and a wheel for python
deps =
    setuptools
    wheel
    twine
allowlist_externals =
    bash
commands =
    # check building sdist and wheels from a checkout
    python setup.py sdist
    python setup.py bdist_wheel
    twine check dist/*.tar.gz
    twine check dist/*.whl

    # check building wheels from the sdist
    bash -c "pip wheel --verbose dist/equisolve-*.tar.gz -w dist/test"

[testenv:tests]
# configures the unittest environment

setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
usedevelop = true
# installs dependencies we need for testing
# by using tox the developer don't need to manage this dependencies
# him/herself
extras = tests
# before running the tests erases any prerecord of coverage
commands_pre =
    coverage erase
# execute pytest
commands =
    pytest --cov --cov-report=term-missing --cov-append --cov-config=.coveragerc -vv --hypothesis-show-statistics {posargs}
# after executing the pytest assembles the coverage reports
commands_post =
    coverage report
    coverage html
    coverage xml

[testenv:docs]
usedevelop = true
extras = docs
commands = sphinx-build {posargs:-E} -W -b html docs/src docs/build/html

[testenv:format]
# Abuse tox to do actual formatting. Users can call `tox -e format` to run
# formatting on all files
deps =
    black
    isort
commands =
    black {[tox]lint_folders}
    isort {[tox]lint_folders}

[flake8]
# https://flake8.pycqa.org/en/latest/#
max_line_length = 80
hang-closing = true
ignore =
    D401
    W503
docstring-convention = numpy
exclude = src/equisolve/__init__.py
